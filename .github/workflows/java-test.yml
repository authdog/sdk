name: Java SDK Tests

on:
  workflow_dispatch:
  # push:
  #   branches: [ main, develop ]
  #   paths:
  #     - 'java/**'
  #     - '.github/workflows/java-test.yml'
  # pull_request:
  #   branches: [ main, develop ]
  #   paths:
  #     - 'java/**'
  #     - '.github/workflows/java-test.yml'

env:
  JAVA_VERSION: "11"

jobs:
  test:
    name: Test Java SDK
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        java-version: ["11", "17"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Verify Java installation
      run: |
        java -version
        mvn -version

    - name: Install dependencies
      run: |
        cd java
        mvn dependency:resolve

    - name: Compile source code
      run: |
        cd java
        mvn compile

    - name: Compile test code
      run: |
        cd java
        mvn test-compile

    - name: Run tests with coverage
      run: |
        cd java
        mvn test

    - name: Run tests with JUnit 5
      run: |
        cd java
        mvn test -Dtest="**/*Test"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: java-test-results-${{ matrix.java-version }}
        path: java/target/surefire-reports/

  build:
    name: Build Java SDK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build Java module
      run: |
        cd java
        mvn clean compile

    - name: Package JAR
      run: |
        cd java
        mvn package -DskipTests

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: java-jar
        path: java/target/*.jar

  lint:
    name: Lint Java SDK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run Checkstyle
      run: |
        cd java
        mvn checkstyle:check

    - name: Run SpotBugs
      run: |
        cd java
        mvn spotbugs:check

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run OWASP Dependency Check
      run: |
        cd java
        mvn org.owasp:dependency-check-maven:check

    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: java-security-report
        path: java/target/dependency-check-report.html

  benchmark:
    name: Benchmark Java SDK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run JMH benchmarks
      run: |
        cd java
        mvn test -Dtest="**/*Benchmark*" || echo "No benchmarks found"

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: java-benchmark-results
        path: java/target/surefire-reports/
        if-no-files-found: warn
